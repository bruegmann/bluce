@function str-remove-whitespace($str) {
  @while (str-index($str, ' ') != null) {
    $index: str-index($str, ' ');
    $str: "#{str-slice($str, 0, $index - 1)}#{str-slice($str, $index + 1)}";
  }
  @return $str;
}

@function str-split($string, $separator) {
  // empty array/list
  $split-arr: ();
  // first index of separator in string
  $index : str-index($string, $separator);
  // loop through string
  @while $index != null {
    // get the substring from the first character to the separator
    $item: str-slice($string, 1, $index - 1);
    // push item to array
    $split-arr: append($split-arr, $item);
    // remove item and separator from string
    $string: str-slice($string, $index + 1);
    // find new index of separator
    $index : str-index($string, $separator);
  }
  // add the remaining string to list (the last item)
  $split-arr: append($split-arr, $string);

  @return $split-arr;
}

@function get-css-var($var1) {
  $var1string: str-remove-whitespace(quote($var1));

  @if (str-index($string: $var1string, $substring: "var(--") == 1) {
    $color-var: unquote(str-slice($var1string, 5, str-length($var1string) - 1));
    @return $color-var;
  }

  @if (str-index($string: $var1string, $substring: "hsla(var(--") == 1) {

    $splitted: str-split($var1string, ",");
    $var1string: nth($splitted, 2);

    $alpha: nth($splitted, 4);
    $alpha: str-slice($alpha, 0, str-length($alpha) - 1);
    $alpha: unquote($alpha);

    $color-var: unquote(str-slice($var1string, 5, str-length($var1string) - 3));

    @return $color-var, $alpha;
  }

  @return none;
}

@function lighten($var1, $var2) {
  $css-var-res: get-css-var($var1);
  $color-var: nth($css-var-res, 1);
  $length: length($css-var-res);

  @if ($color-var != none) {
    @if ($length > 1) {
      $alpha: nth($css-var-res, 2);
      @return hsla(var(#{$color-var}-h), var(#{$color-var}-s), calc(var(#{$color-var}-l) + #{$var2}), $alpha);
    }

    @return hsl(var(#{$color-var}-h), var(#{$color-var}-s), calc(var(#{$color-var}-l) + #{$var2}));
  }

  @return $var1;
}

@function darken($var1, $var2) {
  $css-var-res: get-css-var($var1);
  $color-var: nth($css-var-res, 1);
  $length: length($css-var-res);

  @if ($color-var != none) {
    @if ($length > 1) {
      $alpha: nth($css-var-res, 2);
      @return hsla(var(#{$color-var}-h), var(#{$color-var}-s), calc(var(#{$color-var}-l) - #{$var2}), $alpha);
    }

    @return hsl(var(#{$color-var}-h), var(#{$color-var}-s), calc(var(#{$color-var}-l) - #{$var2}));
  }

  @return $var1;
}

@function fade-in($var1, $var2) {
  @return $var1;
}

@function rgba($var1, $var2, $var3: 255, $var4: 1) {
  $color-var: get-css-var($var1);

  @if ($color-var != none) {
    @return hsla(var(#{$color-var}-h), var(#{$color-var}-s), var(#{$color-var}-l), $var2);
  }

  @return $var1;
}

@function mix($var1, $var2, $var3) {
  $color-var: get-css-var($var2);
  @if ($color-var != none) {
    @return hsla(var(#{$color-var}-h), var(#{$color-var}-s), var(#{$color-var}-l), 1 - ($var3 / 100%));
  }

  @return $var2;
}

@function red($var1) {
  @return 0;
}

@function green($var1) {
  @return 0;
}

@function blue($var1) {
  @return 0;
}

// @function theme-color-level($color-name: "primary", $level: 0) {
//   $color: theme-color($color-name);
//   $color-base: if($level > 0, $black, $white);
//   $level: abs($level);

//   @return mix($color-base, $color, $level * $theme-color-interval);
// }

$white:    hsl(0, 0%, 100%);
$gray-100: hsl(210, 17%, 98%);
$gray-200: hsl(210, 16%, 93%);
$gray-300: hsl(210, 14%, 89%);
$gray-400: hsl(210, 14%, 83%);
$gray-500: hsl(210, 11%, 71%);
$gray-600: hsl(208, 7%, 46%);
$gray-700: hsl(210, 9%, 31%);
$gray-800: hsl(210, 10%, 23%);
$gray-900: hsl(210, 11%, 15%);
$black:    hsl(0, 0%, 0%);

$blue:    hsl(211, 100%, 50%);
$indigo:  hsl(263, 90%, 51%);
$purple:  hsl(261, 51%, 51%);
$pink:    hsl(332, 79%, 58%);
$red:     hsl(354, 70%, 54%);
$orange:  hsl(27, 98%, 54%);
$yellow:  hsl(45, 100%, 51%);
$green:   hsl(134, 61%, 41%);
$teal:    hsl(162, 73%, 46%);
$cyan:    hsl(188, 78%, 41%);

body{
  --white-h: 0;
  --white-s: 0%;
  --white-l: 100%;
  --white: hsl(var(--white-h), var(--white-s), var(--white-l));

  --gray-100-h: 210;
  --gray-100-s: 17%;
  --gray-100-l: 98%;
  --gray-100: hsl(var(--gray-100-h), var(--gray-100-s), var(--gray-100-l));

  --gray-200-h: 210;
  --gray-200-s: 16%;
  --gray-200-l: 93%;
  --gray-200: hsl(var(--gray-200-h), var(--gray-200-s), var(--gray-200-l));

  --gray-300-h: 210;
  --gray-300-s: 14%;
  --gray-300-l: 89%;
  --gray-300: hsl(var(--gray-300-h), var(--gray-300-s), var(--gray-300-l));

  --gray-400-h: 210;
  --gray-400-s: 14%;
  --gray-400-l: 83%;
  --gray-400: hsl(var(--gray-400-h), var(--gray-400-s), var(--gray-400-l));

  --gray-500-h: 210;
  --gray-500-s: 11%;
  --gray-500-l: 71%;
  --gray-500: hsl(var(--gray-500-h), var(--gray-500-s), var(--gray-500-l));

  --gray-600-h: 208;
  --gray-600-s: 7%;
  --gray-600-l: 46%;
  --gray-600: hsl(var(--gray-600-h), var(--gray-600-s), var(--gray-600-l));

  --gray-700-h: 210;
  --gray-700-s: 9%;
  --gray-700-l: 31%;
  --gray-700: hsl(var(--gray-700-h), var(--gray-700-s), var(--gray-700-l));

  --gray-800-h: 210;
  --gray-800-s: 10%;
  --gray-800-l: 23%;
  --gray-800: hsl(var(--gray-800-h), var(--gray-800-s), var(--gray-800-l));

  --gray-900-h: 210;
  --gray-900-s: 11%;
  --gray-900-l: 15%;
  --gray-900: hsl(var(--gray-900-h), var(--gray-900-s), var(--gray-900-l));

  --black-h: 0;
  --black-s: 0%;
  --black-l: 0%;
  --black: hsl(var(--black-h), var(--black-s), var(--black-l));

  /* --- */

  --blue-h: 211;
  --blue-s: 100%;
  --blue-l: 50%;
  --blue: hsl(var(--blue-h), var(--blue-s), var(--blue-l));        

  --indigo-h: 263;
  --indigo-s: 90%;
  --indigo-l: 51%;
  --indigo: hsl(var(--indigo-h), var(--indigo-s), var(--indigo-l));

  --purple-h: 261;
  --purple-s: 51%;
  --purple-l: 51%;
  --purple: hsl(var(--purple-h), var(--purple-s), var(--purple-l));

  --pink-h: 332;
  --pink-s: 79%;
  --pink-l: 58%;
  --pink: hsl(var(--pink-h), var(--pink-s), var(--pink-l));

  --red-h: 354;
  --red-s: 70%;
  --red-l: 54%;
  --red: hsl(var(--red-h), var(--red-s), var(--red-l));

  --orange-h: 27;
  --orange-s: 98%;
  --orange-l: 54%;
  --orange: hsl(var(--orange-h), var(--orange-s), var(--orange-l));

  --yellow-h: 45;
  --yellow-s: 100%;
  --yellow-l: 51%;
  --yellow: hsl(var(--yellow-h), var(--yellow-s), var(--yellow-l));

  --green-h: 134;
  --green-s: 61%;
  --green-l: 41%;
  --green: hsl(var(--green-h), var(--green-s), var(--green-l));

  --teal-h: 162;
  --teal-s: 73%;
  --teal-l: 46%;
  --teal: hsl(var(--teal-h), var(--teal-s), var(--teal-l));

  --cyan-h: 188;
  --cyan-s: 78%;
  --cyan-l: 41%;
  --cyan: hsl(var(--cyan-h), var(--cyan-s), var(--cyan-l));
}

body.dark {
  --white-l: 0%;

  --gray-100: #{$gray-900};
  --gray-200: #{$gray-800};
  --gray-300: #{$gray-700};
  --gray-400: #{$gray-600};
  --gray-500: #{$gray-500};
  --gray-600: #{$gray-400};
  --gray-700: #{$gray-300};
  --gray-800: #{$gray-200};
  --gray-900: #{$gray-100};
  
  --black-l: 100%;

  /* Add 20% lightning to each color */
  --blue-l: 70%;
  --indigo-l: 71%;
  --pink-l: 78%;
  --red-l: 74%;
  --orange-l: 74%;
  --yellow-l: 74%;
  --green-l: 61%;
  --teal-l: 66%;
  --cyan-l: 61%;
}

$white: var(--white);
$gray-100: var(--gray-100);
$gray-200: var(--gray-200);
$gray-300: var(--gray-300);
$gray-400: var(--gray-400);
$gray-500: var(--gray-500);
$gray-600: var(--gray-600);
$gray-700: var(--gray-700);
$gray-800: var(--gray-800);
$gray-900: var(--gray-900);
$black: var(--black);

$blue: var(--blue);
$indigo: var(--indigo);
$purple: var(--purple);
$pink: var(--pink);
$red: var(--red);
$orange: var(--orange);
$yellow: var(--yellow);
$green: var(--green);
$teal: var(--teal);
$cyan: var(--cyan);

$card-border-color: hsla(var(--black-h), var(--black-s), var(--blue-l), .125);
$card-cap-bg: hsla(var(--black-h), var(--black-s), var(--blue-l), .03);

$alert-color-level: 0;